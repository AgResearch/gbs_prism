#!/usr/bin/env bash

usage="usage: $(basename "$0") [--home] [--dev|--test] <nix-flake-url>"

# defaults
app_dir=/agr/persist/apps/eri_rocky8/software
modulefiles_dir=/agr/persist/apps/eri_rocky8/modules/all

while true; do
    case "$1" in
    --home)
        app_dir=$HOME/apps
        modulefiles_dir=$HOME/modulefiles
        ;;
    --help)
        echo >&2 "$usage"
        exit
        ;;
    -*)
        echo >&2 "$usage"
        exit 1
        ;;
    *)
        break
        ;;
    esac
    shift
done

test $# == 1 || {
    echo >&2 "$usage"
    exit 1
}

nix_flake_url="$1"

test -d "$app_dir" || {
    echo >&2 "$usage"
    echo >&2 "no such directory $app_dir"
    exit 1
}

test -d "$modulefiles_dir" || {
    echo >&2 "$usage"
    echo >&2 "no such directory $modulefiles_dir"
    exit 1
}

# Nix flake
IFS='?#' read -r repo query_string flake_attr <<<"$nix_flake_url"

package_base="${repo##?*/}"

env="${flake_attr##?*.}"
case "$flake_attr" in
eri.dev)
    package_suffix="-$env"
    ;;
eri.test)
    package_suffix="-$env"
    ;;
eri.prod)
    package_suffix=
    ;;
*)
    echo >&2 "ERROR: flake attribute expected to be one of eri.dev, eri.test, eri.prod"
    exit 1
    ;;
esac

package="${package_base}${package_suffix}"
version="${query_string##?*/}"

echo "installing Nix flake $nix_flake_url as $package version $version into $app_dir with modulefile into $modulefiles_dir"

package_dir="$app_dir/$package"
test -d "$package_dir" || {
    mkdir "$package_dir"
}

package_version_dir="$package_dir/$version"

nix build -o "$package_version_dir" "$nix_flake_url"
bin_dir="$package_version_dir/bin"
pipeline_dir="$package_version_dir/pipeline"

# create modulefile
module_dir="$modulefiles_dir/$package"
test -d "$module_dir" || mkdir "$module_dir"

cat >"$module_dir/$version.lua" <<EOF
help([==[

Description
===========
This module provides access to the gbs-prism pipeline.

Example
=======
\$ redun run \$GBS_PRISM/pipeline.py main --context-file \$GBS_PRISM/eri-test.json --run 240323_A01439_0249_BH33MYDRX5

More information
================
 - Homepage: https://github.com/AgResearch/gbs_prism
]==])


prepend_path("PATH", "${bin_dir}")
setenv("GBS_PRISM", "${pipeline_dir}")
EOF
